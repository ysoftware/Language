func malloc(size: Int) -> Void* #foreign;
func printf(format: String, arguments: Int, ...) #foreign;

struct Node {
    next: Node*;
    value: Int;
}

func print(head: Node) {
    current := &head;
    while (current != null) {
        printf("%d\n", current.value);
        current = current.next;
    }
}

func append(head: Node*, value: Int) {
    node := cast(Node*) malloc(sizeof Node);
    node.value = value;

    current := head;
    while (current.next != null) {
        current = current.next;
    }
    current.next = node;
}

func main(count: Int, arguments: Int8**) -> Int {
    head : Node;
    head.value = 6;

    append(&head, 5);
    append(&head, 4);
    append(&head, 3);
    append(&head, 2);
    append(&head, 1);
    print(head);
    
    return 0;
}
