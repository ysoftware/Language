func printf(format: String, arguments: Int, ...) #foreign;

// @Todo: size of
// @Todo: casting (different sizes of Int, Void* to other pointers)
// @Todo: implement heap allocation

struct Node {
    next: Node*;
    value: Int;
}

struct List {
    head: Node*;
}

func main(count: Int, arguments: Int8**) -> Int {
    list: List;

    

    node1: Node;
    node1.value = 1;
    list.head = &node1;

    if (list.head != null) {
        node2: Node;
        node2.value = 2;
        list.head.next = &node2;

        if (list.head.next != null) {
            node3: Node;
            node3.value = 3;
            list.head.next.next = &node3;

            if (list.head.next.next != null) {
                node4: Node;
                node4.value = 4;
                list.head.next.next.next = &node4;
            }
        }
    }

    first := list.head;
    if (first != null) {
        printf("1: %d\n", first.value);

        second := first.next;
        if (second != null) {
            printf("2: %d\n", second.value);

            third := second.next;
            if (third != null) {
                printf("3: %d\n", third.value);

                fourth := third.next;
                if (fourth != null) {
                    printf("4: %d\n", fourth.value);

                    fifth := fourth.next;
                    if (fifth != null) {
                        printf("5: %d\n", fifth.value);
                    }
                }
            }
        }
    }

    return 0;
}
