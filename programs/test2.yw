struct Node<Value> {
    next: Node<Value>*;
    value: Value;
}

func transform<F, T>(value: F) -> T #foreign;

func list_transform<F, T>(head: Node<F>*) -> Node<T>* {
    new_head := new Node<T>;

    new_current := new_head;
    current := head;
    while (current.next != null) {
        new_current.value = transform<F, T>(current.value);

        current = current.next;
    }
    return new_head;
}

func main() {
    int_list    : Node<Int>*    = new Node<Int>;
    string_list : Node<String>* = list_transform<Int, String>(int_list);
}