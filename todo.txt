TODO

IRGEN
- refactor identation
- make IRGen throw errors

PARSER
- local variable id for different scopes
- unit test error cursors
- unit test member access
- verify all paths of a procedure return a value
- check what happens when we're specifying the type of base 
  with a name, but not for a structure declaration, but for a procedure declaration
  maybe we should split those kinds of declarations?
  but then the conflict resolution will be messier


LEXER
- arrays
- subscript access
- properly eat whitespaces
- proc call doesn't fail without semicolon at the end


BUGS

- let code = "1struct c { a: String; b :: 1; }" // this passes (with 1 at the start)
- you can pass string literal with no error as while condition
- endless loop: if (pointer != null) {  printf("%d\n", pointerToInt(pointer))); }
- func main() { a := (1 + 3) * (1 + 7 / -(5 + 3)) % 100 - 0.5; } // should resolve to float (because of 0.5)